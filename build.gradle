buildscript {
    ext {
        kotlinVersion = '1.3.31'
        springBootVersion = '2.1.5.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.21"
    id("io.gitlab.arturbosch.detekt").version("1.0.0-RC14")
}

apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "io.gitlab.arturbosch.detekt"

group = 'de.schreib.handball'
version = '1.0.7'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}


dependencies {
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.0.0-RC14"
    // Production Monitoring

    // Spring developement tools
    compile('org.springframework.boot:spring-boot-devtools')

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    runtime('org.postgresql:postgresql')

    // Mapping java8 Date types to database types
    compile('org.hibernate:hibernate-java8')

    // Database migration
    compile('org.liquibase:liquibase-core')

    // Serializer for java8 Date types
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

    // Mail
    //compile('org.springframework.boot:spring-boot-starter-mail')

    // Kotlin coroutine hilfsmethoden
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'


    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile "org.mockito:mockito-core:2.+"
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-inline:2.16.0'
    testCompile "com.opentable.components:otj-pg-embedded:$pgEmbeddedVersion"

}

kotlin {
}

task dockerRest(type: Copy) {
    from 'build/libs'
    logger.warn("${version}")
    include "handballtag-${version}.jar"

    into "docker/rest/deploy/"
    rename '.*', 'handballtag-service.jar'
}

detekt {
    input = files("src/main/kotlin")
    filters = ".*/resources/.*,.*/build/.*"
}

def DEV_GROUP = 'Dev Environment'


task databaseUp(type: Exec) {
    group = DEV_GROUP
    commandLine './start-dev.sh'
}

task databaseDown(type: Exec) {
    group = DEV_GROUP
    commandLine './stop-dev.sh'
}
